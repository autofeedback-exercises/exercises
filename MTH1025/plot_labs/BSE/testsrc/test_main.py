
try:
    from AutoFeedback import varchecks as vc
    from AutoFeedback import plotchecks as pc
    from AutoFeedback import funcchecks as fc
    from AutoFeedback.plotclass import line
except:

    import subprocess
    import sys

    subprocess.check_call([sys.executable, "-m", "pip", "install", "AutoFeedback[plot]"])
    from AutoFeedback import var as vc
    from AutoFeedback import plotchecks as pc
    from AutoFeedback import funcchecks as fc
    from AutoFeedback.plotclass import line

import unittest
import numpy as np

x= np.linspace(-np.pi,np.pi,100)
line1=line(x, np.sign(x), label='Target Function', colour=['k','black',(0.0,0.0,0.0,1)])
y=[-1.13128733,0.,1.13128733]
z=[-0.98407659,-1.17869463,-0.9115403,0.,0.9115403,1.17869463,0.98407659]

axislabels=["x","y",""]

my_F0 = np.array([-7.79634367e-16,-3.95194242e-01,-7.39764669e-01,-9.94642541e-01 ,-1.14076644e+00,-1.18222516e+00,-1.14340807e+00,-1.06117495e+00 ,-9.74421094e-01,-9.14050218e-01,-8.96105580e-01,-9.19752461e-01 ,-9.70293774e-01,-1.02590548e+00,-1.06575218e+00,-1.07688073e+00 ,-1.05784115e+00,-1.01814563e+00,-9.74058641e-01,-9.42368488e-01 ,-9.34362120e-01,-9.52046748e-01,-9.87817589e-01,-1.02755655e+00 ,-1.05597303e+00,-1.06225425e+00,-1.04401985e+00,-1.00818915e+00 ,-9.68457006e-01,-9.40264434e-01,-9.35039823e-01,-9.55770219e-01 ,-9.95536895e-01,-1.03964877e+00,-1.07075991e+00,-1.07528069e+00 ,-1.04885582e+00,-9.98883960e-01,-9.42953171e-01,-9.03389496e-01 ,-8.99443738e-01,-9.39537288e-01,-1.01614280e+00,-1.10520829e+00 ,-1.17072292e+00,-1.17345831e+00,-1.08158092e+00,-8.80141700e-01 ,-5.76641024e-01,-2.00904609e-01,2.00904609e-01,5.76641024e-01 ,8.80141700e-01,1.08158092e+00,1.17345831e+00,1.17072292e+00 ,1.10520829e+00,1.01614280e+00,9.39537288e-01,8.99443738e-01 ,9.03389496e-01,9.42953171e-01,9.98883960e-01,1.04885582e+00 ,1.07528069e+00,1.07075991e+00,1.03964877e+00,9.95536895e-01 ,9.55770219e-01,9.35039823e-01,9.40264434e-01,9.68457006e-01 ,1.00818915e+00,1.04401985e+00,1.06225425e+00,1.05597303e+00 ,1.02755655e+00,9.87817589e-01,9.52046748e-01,9.34362120e-01 ,9.42368488e-01,9.74058641e-01,1.01814563e+00,1.05784115e+00 ,1.07688073e+00,1.06575218e+00,1.02590548e+00,9.70293774e-01 ,9.19752461e-01,8.96105580e-01,9.14050218e-01,9.74421094e-01 ,1.06117495e+00,1.14340807e+00,1.18222516e+00,1.14076644e+00 ,9.94642541e-01,7.39764669e-01,3.95194242e-01,7.79634367e-16
])

my_F1 = np.array([1.89608854e-15,-7.39304074e-01,-1.13864130e+00,-1.14151547e+00 ,-9.76728326e-01,-9.01346325e-01,-9.70855853e-01,-1.05842470e+00 ,-1.05168467e+00,-9.79859677e-01,-9.46885660e-01,-9.88662838e-01 ,-1.03960720e+00,-1.03159083e+00,-9.82177416e-01,-9.61558684e-01 ,-9.94731018e-01,-1.03257357e+00,-1.02343095e+00,-9.82637100e-01 ,-9.67700441e-01,-9.98054068e-01,-1.03019697e+00,-1.01948797e+00 ,-9.81622206e-01,-9.69837008e-01,-1.00063072e+00,-1.03084071e+00 ,-1.01768572e+00,-9.78885389e-01,-9.69038196e-01,-1.00343590e+00 ,-1.03471750e+00,-1.01739938e+00,-9.73260750e-01,-9.64712227e-01 ,-1.00772387e+00,-1.04413014e+00,-1.01870124e+00,-9.60920224e-01 ,-9.53447923e-01,-1.01732625e+00,-1.06843257e+00,-1.02215381e+00 ,-9.23660361e-01,-9.18516316e-01,-1.06104146e+00,-1.17971226e+00 ,-9.93391335e-01,-3.95129100e-01,3.95129100e-01,9.93391335e-01 ,1.17971226e+00,1.06104146e+00,9.18516316e-01,9.23660361e-01 ,1.02215381e+00,1.06843257e+00,1.01732625e+00,9.53447923e-01 ,9.60920224e-01,1.01870124e+00,1.04413014e+00,1.00772387e+00 ,9.64712227e-01,9.73260750e-01,1.01739938e+00,1.03471750e+00 ,1.00343590e+00,9.69038196e-01,9.78885389e-01,1.01768572e+00 ,1.03084071e+00,1.00063072e+00,9.69837008e-01,9.81622206e-01 ,1.01948797e+00,1.03019697e+00,9.98054068e-01,9.67700441e-01 ,9.82637100e-01,1.02343095e+00,1.03257357e+00,9.94731018e-01 ,9.61558684e-01,9.82177416e-01,1.03159083e+00,1.03960720e+00 ,9.88662838e-01,9.46885660e-01,9.79859677e-01,1.05168467e+00 ,1.05842470e+00,9.70855853e-01,9.01346325e-01,9.76728326e-01 ,1.14151547e+00,1.13864130e+00,7.39304074e-01,1.89608854e-15
])

my_F2 = np.array([-4.50256751e-15,-1.17901169e+00,-9.02759420e-01,-1.06628238e+00 ,-9.49811405e-01,-1.04037435e+00,-9.66218265e-01,-1.02905639e+00 ,-9.74491731e-01,-1.02274945e+00,-9.79454669e-01,-1.01874581e+00 ,-9.82749594e-01,-1.01598934e+00,-9.85087337e-01,-1.01398367e+00 ,-9.86825216e-01,-1.01246490e+00,-9.88162424e-01,-1.01127981e+00 ,-9.89218812e-01,-1.01033326e+00,-9.90070906e-01,-1.00956294e+00 ,-9.90770019e-01,-1.00892614e+00,-9.91352084e-01,-1.00839229e+00 ,-9.91843408e-01,-1.00793845e+00,-9.92264310e-01,-1.00754627e+00 ,-9.92631771e-01,-1.00719956e+00,-9.92961857e-01,-1.00688160e+00 ,-9.93272891e-01,-1.00657108e+00,-9.93591276e-01,-1.00623326e+00 ,-9.93965449e-01,-1.00579659e+00,-9.94507430e-01,-1.00507433e+00 ,-9.95552082e-01,-1.00340909e+00,-9.98556941e-01,-9.96933744e-01 ,-1.01747393e+00,-8.79095781e-01,8.79095781e-01,1.01747393e+00 ,9.96933744e-01,9.98556941e-01,1.00340909e+00,9.95552082e-01 ,1.00507433e+00,9.94507430e-01,1.00579659e+00,9.93965449e-01 ,1.00623326e+00,9.93591276e-01,1.00657108e+00,9.93272891e-01 ,1.00688160e+00,9.92961857e-01,1.00719956e+00,9.92631771e-01 ,1.00754627e+00,9.92264310e-01,1.00793845e+00,9.91843408e-01 ,1.00839229e+00,9.91352084e-01,1.00892614e+00,9.90770019e-01 ,1.00956294e+00,9.90070906e-01,1.01033326e+00,9.89218812e-01 ,1.01127981e+00,9.88162424e-01,1.01246490e+00,9.86825216e-01 ,1.01398367e+00,9.85087337e-01,1.01598934e+00,9.82749594e-01 ,1.01874581e+00,9.79454669e-01,1.02274945e+00,9.74491731e-01 ,1.02905639e+00,9.66218265e-01,1.04037435e+00,9.49811405e-01 ,1.06628238e+00,9.02759420e-01,1.17901169e+00,4.50256751e-15])


line2=line(x, my_F0, label='F10', colour=['r','red',(1.0,0.0,0.0,1)])
line3=line(x, my_F1, label='F20', colour=['b','blue',(0.0,0.0,1.0,1)])
line4=line(x, my_F2, label='F50', colour=['g','green',(0.0,0.5,0.0,1)])

class UnitTests(unittest.TestCase):
    def test_step1(self):
        assert(vc.check_vars('x',np.linspace(-np.pi,np.pi,100)))

    def test_step2(self):
        myy=np.ones(100)
        myy[:50]=-1
        assert(vc.check_vars('y',myy))

    def test_plot1(self):
        assert(pc.check_plot([line1],explabels=axislabels,explegend=True,output=True,check_partial=True))

    def test_coefficient(self):
        assert(fc.check_func('fourier_coefficient',[(4,),(100,),(3,)],[0,0, 4/(3*np.pi)]))

    def test_expand(self):
        assert(fc.check_func('fourier_expand',[(1,0.1),(3,np.linspace(-1,1,3)),(10,np.linspace(-0.5,0.5,7))],[0.1271118539607633,y,z],calls=['fourier_coefficient']))


    def test_step3(self):
        assert(vc.check_vars('F10',my_F0))

    def test_step4(self):
        assert(vc.check_vars('F20',my_F1))

    def test_step5(self):
        assert(vc.check_vars('F50',my_F2))

    def test_plot2(self):
        assert(pc.check_plot([line1,line2,line3,line4],explabels=axislabels,explegend=True,output=True))

